name: Python package

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**.md'

jobs:

  pytest_tests:
    runs-on: linux.12xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov pytest-xdist numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: pip install git+https://github.com/jamesr66a/transformers.git@fx_issues sentencepiece six sacremoses
      - name: Install pippy
        run: "python setup.py install"
      - name: Test with pytest
        run: |
          pytest --cov=pippy --ignore=test/hf_test.py test/

  hf_model_tests_forward:
    runs-on: linux.12xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        shard: ["0", "1", "2", "3"]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov pytest-xdist pytest-shard numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: pip install git+https://github.com/jamesr66a/transformers.git@fx_issues sentencepiece six sacremoses
      - name: Install pippy
        run: "python setup.py install"
      # Single thread to avoid OOM
      - name: Test with pytest
        run: |
          pytest --shard-id=${{ matrix.shard }} --num-shards=4 -k 'not HFModelsForwardBackwardTest' -sv --cov=pippy test/hf_test.py

  hf_model_tests_forward_backward:
    runs-on: linux.24xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        shard: ["0", "1", "2", "3"]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov pytest-xdist pytest-shard numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: pip install git+https://github.com/jamesr66a/transformers.git@fx_issues sentencepiece six sacremoses
      - name: Install pippy
        run: "python setup.py install"
      # Single thread to avoid OOM
      - name: Test with pytest
        run: |
          pytest --shard-id=${{ matrix.shard }} --num-shards=4 -k 'HFModelsForwardBackwardTest' -sv --cov=pippy test/hf_test.py

  min_gpt_test:
    runs-on: linux.12xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pippy
        run: "python setup.py install"
      - name: Initialize minGPT submodule
        run: git submodule update --init test/minGPT
      - name: Test min-gpt-tracing
        run: python test/min_gpt_tracing.py

  integration_test_cpu:
    runs-on: linux.2xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        replicate: ["0", "1"]
        schedule: ["FillDrain", "1F1B"]
        checkpoint: [ "0", "1" ]
    env:
      VERBOSE: "0"
      OMP_NUM_THREADS: "1"
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: pip install git+https://github.com/jamesr66a/transformers.git@fx_issues sentencepiece six sacremoses
      - name: Install pippy
        run: "python setup.py install"
      - name: Run forward-only integration test
        run: python test/local_test_forward.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }} --checkpoint ${{ matrix.checkpoint }}
      - name: Run forward-loss-backward integration test
        run: python test/local_test_forward_backward.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }} --checkpoint ${{ matrix.checkpoint }}
      - name: Run null_coalesce_accumulate integration test
        run: python test/local_test_null_coalesce_accumulate.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }}
      - name: Run HF BERT forward-only integration test
        run: python test/local_test_forward_hf_bert.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }} --checkpoint ${{ matrix.checkpoint }}
      - name: Run HF GPT2 forward-only integration test
        run: python test/local_test_forward_hf_gpt2.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }} --checkpoint ${{ matrix.checkpoint }}
      - name: Run GPT2 slurm example without slurm
        run: python examples/slurm/hf/gpt2/pippy_gpt2.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }}
      - name: Run BERT slurm example without slurm
        run: python examples/slurm/hf/bert/pippy_bert.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }}
      - name: Run T5 slurm example without slurm
        run: python examples/slurm/hf/t5/pippy_t5.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }} --checkpoint ${{ matrix.checkpoint }}
      - name: Run visualizer test
        run: python test/local_test_visualizer.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }}

  integration_test_gpu:
    runs-on: linux.16xlarge.nvidia.gpu
    strategy:
      matrix:
        replicate: ["0", "1"]
        schedule: ["FillDrain", "1F1B"]

    steps:
      - name: Check ldd --version
        run: ldd --version
      - name: check cpu info
        shell: bash
        run: |
          cat /proc/cpuinfo
      - name: check distribution info
        shell: bash
        run: |
          cat /proc/version
      - name: Display EC2 information
        shell: bash
        run: |
          set -euo pipefail
          function get_ec2_metadata() {
            # Pulled from instance metadata endpoint for EC2
            # see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html
            category=$1
            curl -fsSL "http://169.254.169.254/latest/meta-data/${category}"
          }
          echo "ami-id: $(get_ec2_metadata ami-id)"
          echo "instance-id: $(get_ec2_metadata instance-id)"
          echo "instance-type: $(get_ec2_metadata instance-type)"
      - name: check gpu info
        shell: bash
        run: |
          sudo yum install lshw -y
          sudo lshw -C display
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      # manually install python3.8 since self-hosted machine does not support the python action feature
      - name: check amazon-linux-extras
        run: |
          sudo yum install -y amazon-linux-extras
          amazon-linux-extras | grep -i python
      - name: update python
        run: |
          sudo amazon-linux-extras install python3.8
      - name: Update pip
        run: |
          sudo yum update -y
          sudo yum -y install git python3-pip
          sudo pip3 install --upgrade pip
      - name: create virtual env
        run: |
          sudo pip3 install --upgrade virtualenv
          virtualenv build_binary_3.8 -p python3.8
      - name: check python version
        run: |
          source build_binary_3.8/bin/activate
          python --version
      - name: Install CUDA 11.3
        shell: bash
        run: |
          yum list installed | grep nvidia ||
          sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm &&
          sudo yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo &&
          sudo yum clean expire-cache &&
          sudo yum install -y nvidia-driver-latest-dkms &&
          sudo yum install -y cuda-11-3 &&
          sudo yum install -y cuda-drivers &&
          sudo yum install -y libcudnn8-devel
      - name: Install nvidia driver, nvidia-docker runtime, set GPU_FLAG
        run: |
          bash .github/workflows/install_nvidia_utils_linux.sh
          echo "GPU_FLAG=--gpus all" >> "${GITHUB_ENV}"
      - name: setup Path
        run: |
          echo /usr/local/cuda-11.3/bin >> $GITHUB_PATH
          echo /usr/local/bin >> $GITHUB_PATH
      - name: nvcc check
        run: |
          nvcc --version
          nvidia-smi
      - name: Install dependencies
        run: |
          source build_binary_3.8/bin/activate
          pip3 install flake8 pytest pytest-cov numpy
          if [ -f requirements.txt ]; then pip3 install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cu113/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: |
          source build_binary_3.8/bin/activate
          pip3 install git+https://github.com/jamesr66a/transformers.git@fx_issues sentencepiece
      - name: Install pippy
        run: |
          source build_binary_3.8/bin/activate
          python3 setup.py install
      - name: Run all integration tests
        run: |
          source build_binary_3.8/bin/activate
          python3 test/local_test_forward.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }}
          python3 test/local_test_forward_backward.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }}
          python3 examples/slurm/hf/gpt2/pippy_gpt2.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }}
      - name: Run flaky integration tests
        run: |
          source build_binary_3.8/bin/activate
          python3 test/local_test_forward_hf_gpt2.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }} || true
          python3 test/local_test_forward_hf_bert.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }} || true

  ddp_test:
    runs-on: linux.2xlarge
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        replicate: ["0", "1"]
        schedule: ["FillDrain", "1F1B"]
        verbose: ["0"]
        checkpoint: [ "0", "1" ]
    container:
      image: python:${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov numpy
          if [ -f requirements.txt ]; then pip install -r requirements.txt --find-links https://download.pytorch.org/whl/nightly/cpu/torch_nightly.html; fi
      - name: Install pavel's huggingface fork
        run: pip install git+https://github.com/jamesr66a/transformers.git@fx_issues sentencepiece six sacremoses
      - name: Install pippy
        run: "python setup.py install"
      - name: Run PP + DDP test - Transmitted parameters
        run: python test/local_test_ddp.py --replicate ${{ matrix.replicate }} -s ${{ matrix.schedule }} --checkpoint ${{ matrix.checkpoint }}
